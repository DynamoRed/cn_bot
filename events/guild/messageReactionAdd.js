const Discord = require("discord.js");

function sleep(milliseconds) {
    const date = Date.now();
    let currentDate = null;
    do {
      currentDate = Date.now();
    } while (currentDate - date < milliseconds);
}

module.exports = async (bot, reaction, user) => {
    if(reaction.partial) await reaction.fetch();
    if(reaction.message.partial) await reaction.message.fetch();

    const message = reaction.message;
    const guildMember = message.guild.members.cache.find(m => m.user.id === user.id);
    const authorName =  guildMember.nickname ? guildMember.nickname : guildMember.user.username;

    if(user.bot) return; 

    if(message.channel.id == bot.config.I_CHANNELS.REUNION_VOTES){
        if(reaction.emoji != bot.botEmojis.GLOBAL.YES && reaction.emoji != bot.botEmojis.GLOBAL.NO){
            reaction.users.remove(user);
            return;
        }

        message.channel.messages.fetch({ limit: 1 }).then(messages => {
            const lastMessage = messages.first();
            if(lastMessage != message){
                reaction.users.remove(user);
                return;
            }
        }).catch(err => {console.error(err)})
    }

    if(message.channel.name.startsWith("test-staff-de-")){
        if(!message.channel.isStaffTestChannel) return;
        if(!message.channel.isTested) return;

        reaction.users.remove(user);

        if(reaction.emoji == bot.botEmojis.GLOBAL.YES){
            if(message.channel.isStarted) return;
            message.channel.staffTestIsOpen = true;
            message.channel.overwritePermissions([{deny: 'VIEW_CHANNEL', id: message.guild.id},
            {allow: 'VIEW_CHANNEL', id: message.channel.isTested.id},
            {allow: 'SEND_MESSAGES', id: message.channel.isTested.id},
            {allow: 'VIEW_CHANNEL', id: bot.config.I_ROLES.SUPERADMIN},], '');

            const quizQuestions = [
                {
                    "QUESTION": "Le bunnyHop est t-il autoris√© sur le serveur ? si oui, dans quel cas ?"
                },
                {
                    "QUESTION": "D√©finissez la r√®gle du N.L.R ?"
                },
                {
                    "QUESTION": "Les licence d'arme concerne :",
                    "ANSWER": ["Les armes lourdes", "Les pistolets", "Les deux", "Aucune des r√©ponses ci-dessus"]
                },
                {
                    "QUESTION": "Quand est-ce que le travers est autoris√© ?"
                },
                {
                    "QUESTION": "Qu'est ce que le \"Use Button\" ?"
                },
                {
                    "QUESTION": "Definissez le Props-Climb:"
                },
                {
                    "QUESTION": "Les insultes parentales sont autoris√©es sur le serveur.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Assommer quelqu'un sans /me est autoris√©.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Combien de forces de l'ordre doivent √™tre pr√©sentes en ville pour un braquage de banque ?"
                },
                {
                    "QUESTION": "Combien faut-il √™tre de braqueurs au minimum pour une prise d'otage ?"
                },
                {
                    "QUESTION": "Rappelez-nous le r√®glement du m√©tier de Solitaire:"
                },
                {
                    "QUESTION": "Faire un contre braquage sur un braquage de commissariat est autoris√©.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Rappelez-nous le r√®glement du m√©tier de Psycopathe:"
                },
                {
                    "QUESTION": "Donnez-nous les armes auxquelles a le droit le cuisinier:",
                    "ANSWER": ["Pistolets", "Snipers", "PM", "Fusil √† pompe", "Aucune des r√©ponses ci-dessus"]
                },
                {
                    "QUESTION": "Les gendarmes ont le droit aux armes personnelles.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Il est autoris√© de revendre ces armes permanentes aux autres joueurs.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Dites-nous dans quel contexte le vol de v√©hicule de gendarmerie est autoris√©:"
                },
                {
                    "QUESTION": "Les constructions dans lesquelles tous les murs, plafond et sol sont recouvert de noir sont autoris√©es.",
                    "ANSWER": ["Vrai", "Faux"]
                },
                {
                    "QUESTION": "Le montant maximal que les braqueurs peuvent r√©cuperer lors d'un braquage de Banque est de:",
                    "ANSWER": ["500.000$", "250.000$", "1.000.000$", "Aucune des r√©ponses ci-dessus"]
                },
                {
                    "QUESTION": "Quelles conditions doivent √™tre respect√©es pour tuer le Maire ?"
                }
            ]

            let answeredQuestions = [];
            for(let i = 1; i <= 20; i++){
                let rdmNumber = Math.floor(Math.random() * (quizQuestions.length + 1));
                while(answeredQuestions.includes(rdmNumber)){
                    rdmNumber = Math.floor(Math.random() * (quizQuestions.length + 1));
                }

                let rdmQuestion = quizQuestions[rdmNumber - 1];
                answeredQuestions[i-1] = rdmNumber;

                let footerContent = `Type de r√©ponse: `;
                let descriptionContent = `${rdmQuestion.QUESTION}`;

                if(rdmQuestion.ANSWER){
                    let emojis = [bot.botEmojis.NUMBERS._1, 
                        bot.botEmojis.NUMBERS._2, 
                        bot.botEmojis.NUMBERS._3, 
                        bot.botEmojis.NUMBERS._4, 
                        bot.botEmojis.NUMBERS._5, 
                        bot.botEmojis.NUMBERS._6, 
                        bot.botEmojis.NUMBERS._7, 
                        bot.botEmojis.NUMBERS._8, 
                        bot.botEmojis.NUMBERS._9];

                    let y = 0;
                    rdmQuestion.ANSWER.forEach(a => {
                        descriptionContent += `
                        
                        ${emojis[y]} ${a}`;
                        y++;
                    })
                    footerContent += `**QCM**`;
                } else {
                    footerContent += `**R√©ponse courte**`;
                }

                var questionEmbed = new Discord.MessageEmbed()
                    .setColor(bot.config.COLORS.BASE)
                    .setTitle(`Question N¬∞${i}`)
                    .setDescription(descriptionContent)
                    .setFooter(footerContent)

                let msg = await message.channel.send(questionEmbed);

                if(rdmQuestion.ANSWER){
                    let emojis = [bot.botEmojis.NUMBERS._1, 
                        bot.botEmojis.NUMBERS._2, 
                        bot.botEmojis.NUMBERS._3, 
                        bot.botEmojis.NUMBERS._4, 
                        bot.botEmojis.NUMBERS._5, 
                        bot.botEmojis.NUMBERS._6, 
                        bot.botEmojis.NUMBERS._7, 
                        bot.botEmojis.NUMBERS._8, 
                        bot.botEmojis.NUMBERS._9];

                    let y = 0;
                    rdmQuestion.ANSWER.forEach(a => {
                        msg.react(emojis[y]);
                        y++;
                    })
                }

                sleep(3000);
            }
        } else {
            
        }
    }

    if(message.channel.id == bot.config.I_CHANNELS.TICKETS){
        if(reaction.emoji.name == "üì©"){
            if(user.isInTicket) return;
            user.isInTicket = true;
            const channel = await reaction.message.guild.channels.create(`ticket-de-${authorName}`,{
                type: 'text',
                parent: bot.config.I_CHANNELS.TICKET_CATEGORY,
                permissionOverwrites: [
                    {deny: 'VIEW_CHANNEL', id: reaction.message.guild.id},
                    {allow: 'VIEW_CHANNEL', id: user.id},
                    {allow: 'VIEW_CHANNEL', id: bot.config.I_ROLES.STAFF},
                ],
            });

            let ticketCategory = message.guild.channels.cache.find(c => c.id == bot.config.I_CHANNELS.TICKET_CATEGORY);

            channel.ticketIsClosing = false;
            channel.ticketMember = user;
            channel.send(`<@&${bot.config.I_ROLES.STAFF}> <@${user.id}>`);

            let ticketEmbed1 = new Discord.MessageEmbed()
                .setColor(bot.config.COLORS.BASE)
                .setTitle(`üé´ Ticket Support de ${authorName}`)
                .setDescription(`${bot.botEmojis.GLOBAL.BULLET} <@${user.id}> un membre de notre √©quipe arrive pour vous aider.
                Merci de d√©crire clairement et avec d√©tails votre soucis afin que la r√©solution de votre probl√®me se fasse avec le plus rapidement possible !`);
            let msg = await channel.send(ticketEmbed1);
            msg.react(`üîê`);

            reaction.users.remove(user);
        }
    }

    if(message.channel.id == bot.config.I_CHANNELS.VERIFICATION){
        if(reaction.emoji.name == "‚úÖ"){
            message.guild.members.cache.find(m => m.user.id == user.id).roles.add(bot.config.I_ROLES.MEMBER, "");
        }
    }

    if(message.channel.name.includes("ticket-de-")){
        if(reaction.emoji.name == "üîê"){
            if(message.channel.ticketIsClosing) return;
            reaction.users.remove(user);
            if(message.channel.ticketMember) message.channel.ticketMember.isInTicket = false;
            if(!message.guild.members.cache.find(m => m.user.id == user.id).roles.cache.find(r => r.id == bot.config.I_ROLES.STAFF)) {
                var replyEmbed = new Discord.MessageEmbed()
                    .setColor(bot.config.COLORS.DENY)
                    .setFooter(`Message auto-supprim√© dans 5 secondes`)
                    .setDescription(`<@${user.id}> **vous n'avez pas la permission de faire ca**`)
                let msg = await message.channel.send(replyEmbed);
                setTimeout(() => {msg.delete()}, 5 * 1000)
                return;
            }
            reaction.users.remove(bot.user);
            var replyEmbed = new Discord.MessageEmbed()
                .setColor(bot.config.COLORS.DENY)
                .setDescription(`**Fermeture du ticket dans 10 secondes !**`)
                .setFooter("Cliquez sur üîì pour r√©ouvrir le ticket");
            let msg = await message.channel.send(replyEmbed);
            msg.react("üîì");
            message.channel.ticketIsClosing = true;
            setTimeout(() => {
                if(!message.channel.ticketIsClosing) return;
                message.channel.delete()
            }, 10 * 1000)
           
        }
        if(reaction.emoji.name == "üîì"){
            if(!message.channel.ticketIsClosing) return;
            reaction.users.remove(user);
            if(message.channel.ticketMember) message.channel.ticketMember.isInTicket = false;
            if(!message.guild.members.cache.find(m => m.user.id == user.id).roles.cache.find(r => r.id == bot.config.I_ROLES.STAFF)) {
                var replyEmbed = new Discord.MessageEmbed()
                    .setColor(bot.config.COLORS.DENY)
                    .setFooter(`Message auto-supprim√© dans 5 secondes`)
                    .setDescription(`<@${user.id}> **vous n'avez pas la permission de faire ca**`)
                let msg = await message.channel.send(replyEmbed);
                setTimeout(() => {msg.delete()}, 5 * 1000)
                return;
            }        
            reaction.users.remove(bot.user);
            message.channel.ticketIsClosing = false; 
            var replyEmbed = new Discord.MessageEmbed()
                .setColor(bot.config.COLORS.ALLOW)
                .setDescription(`**R√©ouverture du ticket !**`)
                .setFooter("Cliquez sur üîê pour refermer le ticket");
            let msg = await message.channel.send(replyEmbed);
            msg.react("üîê");
        }
    }
}